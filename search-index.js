var searchIndex = new Map(JSON.parse('[["axplat",{"t":"QHHCQQXCCXCCXCKHMHMKHMHMHMHMFIKNNNNHMNNNHMNHMNNNHMNSSSTTTKFIFTTITTNNNNNNNNNNNNNHNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNHMONNNNOHMHNHMNONNNNHNNNNNNNKHMHMFTTSTSTSSSTKITNNNNNNNNNNNNNHHNNNNNNNHMNNNNNNNHMNNNNNNNNNNNNNNNNHHNNNNHMNNNNNHMNNNNNNNHMNNNNNHH","n":["assert_str_eq","call_main","call_secondary_main","console","console_print","console_println","impl_plat_interface","init","irq","main","mem","power","secondary_main","time","ConsoleIf","read_bytes","","write_bytes","","InitIf","init_early","","init_early_secondary","","init_later","","init_later_secondary","","HandlerTable","IrqHandler","IrqIf","borrow","borrow_mut","default","from","handle","","","into","new","register","","register_handler","set_enable","","try_from","try_into","type_id","unregister","","unregister_handler","DEFAULT_MMIO_FLAGS","DEFAULT_RAM_FLAGS","DEFAULT_RESERVED_FLAGS","DEVICE","EXECUTE","FREE","MemIf","MemRegionFlags","OverlapErr","PhysMemRegion","READ","RESERVED","RawRange","UNCACHED","WRITE","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","borrow_mut","","check_sorted_ranges_overlap","clone","","clone_to_uninit","","complement","contains","difference","empty","extend","flags","fmt","","","","","","from","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","","into_iter","is_all","is_empty","iter","iter_names","mmio_ranges","","name","new_mmio","new_ram","new_reserved","not","paddr","phys_ram_ranges","","ranges_difference","remove","reserved_phys_ram_ranges","","set","size","sub","sub_assign","symmetric_difference","toggle","total_ram_size","try_from","","try_into","","type_id","","union","PowerIf","cpu_boot","","system_off","","Duration","MAX","MICROSECOND","MICROS_PER_SEC","MILLISECOND","MILLIS_PER_SEC","NANOSECOND","NANOS_PER_MICROS","NANOS_PER_MILLIS","NANOS_PER_SEC","SECOND","TimeIf","TimeValue","ZERO","abs_diff","add","add_assign","as_micros","as_millis","as_millis_f32","as_millis_f64","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","busy_wait","busy_wait_until","checked_add","checked_div","checked_mul","checked_sub","clone","clone_to_uninit","cmp","current_ticks","","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","epochoffset_nanos","","eq","fmt","from","from_days","from_hours","from_micros","from_millis","from_mins","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_weeks","hash","into","is_zero","monotonic_time","monotonic_time_nanos","mul","mul_assign","mul_f32","mul_f64","nanos_to_ticks","","new","partial_cmp","saturating_add","saturating_mul","saturating_sub","set_oneshot_timer","","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","","ticks_to_nanos","","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id","wall_time","wall_time_nanos"],"q":[[0,"axplat"],[14,"axplat::console"],[19,"axplat::init"],[28,"axplat::irq"],[51,"axplat::mem"],[142,"axplat::power"],[147,"axplat::time"],[241,"handler_table"],[242,"core::result"],[243,"core::any"],[244,"core::option"],[245,"core::iter::traits::iterator"],[246,"core::iter::traits::collect"],[247,"core::fmt"],[248,"bitflags::iter"],[249,"memory_addr::addr"],[250,"core::ops::function"],[251,"core::time"],[252,"core::cmp"],[253,"core::hash"],[254,"axplat_macros"]],"i":"````````````````Eb`0``Ed`0`0`0```A`000`Ef111`01`0111`01```B`00````00`000000000000Bj10`1010111110111110101111111111011111`Eh111121`0`2`0212222`2121212``Ej`0`Cn0`0`0```0``00000000000000``0000000`El1111111`01111111111111111``1111`011111`01111111`011111``","f":"`{{bb}d}{bd}````````````{{{l{f{j{h}}}}}b}0{{{l{{j{h}}}}}n}0`{{bb}n}0{bn}01100```{l{{l{c}}}{}}{{{l{f}}}{{l{fc}}}{}}{{}A`}{cc{}}44{{{l{A`}}b}Ab}{{}c{}}3{{bAd}Ab}0{{{l{A`}}b{Ah{}{{Af{n}}}}}Ab}{{bAb}n}0{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{lAl}{b{{An{Ad}}}}0{{{l{A`}}b}{{An{{Ah{}{{Af{n}}}}}}}}{{}B`}00````````````0{{B`B`}B`}{{{l{fB`}}B`}n}10{{{l{B`}}}b}021{l{{l{c}}}{}}0{{{l{f}}}{{l{fc}}}{}}0{c{{Aj{nBb}}}{{Bh{}{{Bd{Bf}}}}}}{{{l{B`}}}B`}{{{l{Bj}}}Bj}{{lh}n}0{B`B`}{{{l{B`}}B`}Ab}:;{{{l{fB`}}c}n{{Bl{}{{Bd{B`}}}}}}{BjB`}{{{l{B`}}{l{fBn}}}C`}0000{{{l{Bj}}{l{fBn}}}C`}{cc{}}0{b{{An{B`}}}}{bB`}00{cB`{{Bl{}{{Bd{B`}}}}}}{{{l{Cb}}}{{An{B`}}}}{{{l{fB`}}B`}n}{{B`B`}B`};{{}c{}}0{B`c{}}{{{l{B`}}}Ab}0{{{l{B`}}}{{Cd{B`}}}}{{{l{B`}}}{{Cf{B`}}}}{{}{{l{{j{Bf}}}}}}0{Bjl}{{bb{l{Cb}}}Bj}00{B`B`}{BjCh}44{{{l{{j{Bf}}}}{l{{j{Bf}}}}c}{{Aj{nBb}}}{{Cj{Bf}}}}<55{{{l{fB`}}B`Ab}n}{Bjb}=>=>{{}b}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{lAl}0{{B`B`}B`}`{{bb}n}0{{}d}0```{{}Cl}`0`000````{{CnCn}Cn}0{{{l{fCn}}Cn}n}{{{l{Cn}}}D`}0{{{l{Cn}}}Db}{{{l{Cn}}}Dd}2{{{l{Cn}}}Cl}21{l{{l{c}}}{}}{{{l{f}}}{{l{fc}}}{}}{Cnn}{Dfn}{{CnCn}{{An{Cn}}}}{{CnDh}{{An{Cn}}}}01{{{l{Cn}}}Cn}{{lh}n}{{{l{Cn}}{l{Cn}}}Dj}??{{}Cn}{{CnDh}Cn}{{{l{fCn}}Dh}n}{{CnCn}Db}{{CnCn}Dd}{{CnDb}Cn}{{CnDd}Cn}{{}Cl}0{{{l{Cn}}{l{Cn}}}Ab}{{{l{Cn}}{l{fBn}}}{{Aj{nDl}}}}{cc{}}{ClCn}000000{DbCn}{DdCn}2{{{l{Cn}}{l{fc}}}nDn}{{}c{}}{{{l{Cn}}}Ab}{{}Df}:{{CnDh}Cn}{{{l{fCn}}Dh}n}>={ClCl}0{{ClDh}Cn}{{{l{Cn}}{l{Cn}}}{{An{Dj}}}}{{CnCn}Cn}50{Cln}01{{{l{fCn}}Cn}n}{{{l{Cn}}}Dh}00{cCn{{Bh{}{{Bd{Cn}}}}}}{cCn{{Bh{}{{Bd{{l{Cn}}}}}}}}88{c{{Aj{e}}}{}{}}{Db{{Aj{CnE`}}}}{Dd{{Aj{CnE`}}}}{{}{{Aj{c}}}{}}{lAl}{{}Df}{{}Cl}","D":"AGl","p":[[1,"usize"],[1,"never"],[0,"mut"],[1,"u8"],[1,"slice"],[1,"reference",null,null,1],[1,"unit"],[5,"HandlerTable",28,241],[1,"bool"],[8,"IrqHandler",28],[17,"Output"],[1,"fn"],[6,"Result",242,null,1],[5,"TypeId",243],[6,"Option",244,null,1],[5,"MemRegionFlags",51],[8,"OverlapErr",51],[17,"Item"],[8,"RawRange",51],[10,"Iterator",245],[5,"PhysMemRegion",51],[10,"IntoIterator",246],[5,"Formatter",247],[8,"Result",247],[1,"str"],[5,"Iter",248],[5,"IterNames",248],[5,"PhysAddr",249],[10,"FnMut",250],[1,"u64"],[5,"Duration",147,251],[1,"u128"],[1,"f32"],[1,"f64"],[8,"TimeValue",147],[1,"u32"],[6,"Ordering",252],[5,"Error",247],[10,"Hasher",253],[5,"TryFromFloatSecsError",251],[10,"ConsoleIf",14],[10,"InitIf",19],[10,"IrqIf",28],[10,"MemIf",51],[10,"PowerIf",142],[10,"TimeIf",147]],"r":[[9,254],[12,254],[28,241],[31,241],[32,241],[33,241],[34,241],[37,241],[38,241],[39,241],[42,241],[45,241],[46,241],[47,241],[50,241],[147,251],[148,251],[149,251],[151,251],[153,251],[157,251],[160,251],[161,251],[162,251],[163,251],[164,251],[165,251],[166,251],[167,251],[168,251],[169,251],[170,251],[171,251],[172,251],[173,251],[176,251],[177,251],[178,251],[179,251],[180,251],[181,251],[182,251],[185,251],[186,251],[187,251],[188,251],[189,251],[190,251],[191,251],[194,251],[195,251],[196,251],[197,251],[198,251],[199,251],[200,251],[201,251],[202,251],[203,251],[204,251],[205,251],[206,251],[207,251],[208,251],[209,251],[212,251],[213,251],[214,251],[215,251],[218,251],[219,251],[220,251],[221,251],[222,251],[225,251],[226,251],[227,251],[228,251],[229,251],[230,251],[231,251],[234,251],[235,251],[236,251],[237,251],[238,251]],"b":[[71,"impl-Flags-for-MemRegionFlags"],[72,"impl-MemRegionFlags"],[90,"impl-LowerHex-for-MemRegionFlags"],[91,"impl-UpperHex-for-MemRegionFlags"],[92,"impl-Octal-for-MemRegionFlags"],[93,"impl-Binary-for-MemRegionFlags"],[94,"impl-Debug-for-MemRegionFlags"],[99,"impl-Flags-for-MemRegionFlags"],[100,"impl-MemRegionFlags"],[230,"impl-Sum-for-Duration"],[231,"impl-Sum%3C%26Duration%3E-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMAFQAgAAIALgACAEgAAABMAAMAUQADAFsABQBkAAAAbgAAAIgABQCjAAEArQABALUAAgC6AAIAwwABANAAAADVAAEA3AAAAOIAAQDnAAEA6wAAAO4AAQA=","P":[[31,"T"],[33,""],[34,"T"],[35,""],[38,"U"],[39,""],[45,"U,T"],[46,"U"],[47,""],[75,"T"],[79,""],[88,"T"],[89,""],[96,"T"],[98,""],[102,"T"],[103,""],[107,"U"],[109,"IntoIterator::IntoIter"],[110,""],[124,"F"],[125,""],[135,"U,T"],[137,"U"],[139,""],[172,"T"],[174,""],[196,"T"],[197,""],[207,"__H"],[208,"U"],[209,""],[230,"I"],[232,""],[234,"U,T"],[235,""],[237,"U"],[238,""]]}],["axplat_aarch64_common",{"t":"QCCQCCCQHHHHHHHHHHHHHHHHHHHHHHHH","n":["console_if_impl","generic_timer","gic","irq_if_impl","pl011","pl031","psci","time_if_impl","current_ticks","enable_irqs","init_early","nanos_to_ticks","set_oneshot_timer","ticks_to_nanos","handle_irq","init_gicc","init_gicd","register_handler","set_enable","unregister_handler","getchar","init_early","irq_handler","putchar","read_bytes","write_bytes","epochoffset_nanos","init_early","cpu_off","cpu_on","init","system_off"],"q":[[0,"axplat_aarch64_common"],[8,"axplat_aarch64_common::generic_timer"],[14,"axplat_aarch64_common::gic"],[20,"axplat_aarch64_common::pl011"],[26,"axplat_aarch64_common::pl031"],[28,"axplat_aarch64_common::psci"],[32,"memory_addr::addr"],[33,"axplat::irq"],[34,"core::option"]],"i":"````````````````````````````````","f":"````````{{}b}{df}{{}f}{bb}{bf}132{{hh}f}{{dj}l}{{dl}f}{d{{n{j}}}}{{}{{n{A`}}}}{hf}8{A`f}{{{Af{Ab{Ad{A`}}}}}d}{{{Af{{Ad{A`}}}}}f}=3;{{ddd}f}{{{Af{Ah}}}f}{{}Aj}","D":"Db","p":[[1,"u64"],[1,"usize"],[1,"unit"],[5,"VirtAddr",32],[8,"IrqHandler",33],[1,"bool"],[6,"Option",34,null,1],[1,"u8"],[0,"mut"],[1,"slice"],[1,"reference",null,null,1],[1,"str"],[1,"never"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["axplat_macros",{"t":"XX","n":["main","secondary_main"],"q":[[0,"axplat_macros"]],"i":"``","f":"``","D":"f","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7859,1244,177]}